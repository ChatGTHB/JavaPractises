
Java'da Interface Nedir?

Interface, Java'da bir sınıfın hangi metotları uygulamak zorunda olduğunu belirten bir yapıdır.
Interface’ler, sınıfların belirli bir davranışı uygulamalarını zorunlu kılarak soyutlamayı destekler.
Interface’ler, genellikle farklı sınıfların ortak davranışları paylaşmasını sağlamak amacıyla kullanılır.

Metotlar ve Değişkenler:
- Interface içerisinde tanımlanan metotlar varsayılan olarak public ve abstract'tır.
  Yani, bu metotların yalnızca imzaları bulunur; gövdesi (body) olmaz.
- Interface’lerdeki değişkenler, varsayılan olarak public, static ve final olarak tanımlanır.
  Bu değişkenlerin değeri sabittir ve değiştirilemez.

Interface Uygulama (Implement):
- Bir sınıf, bir interface'i `implements` anahtar kelimesi ile uygulayabilir.
- Bir sınıf birden fazla interface’i aynı anda uygulayabilir.
  Bu, Java'da çoklu kalıtımı (multiple inheritance) dolaylı olarak destekler.

Varsayılan ve Statik Metotlar:
- Java 8 ile birlikte, interface'ler içinde varsayılan (default) ve statik metotlar tanımlanabilir.
  Bu metotların gövdesi bulunur ve override edilmesi zorunlu değildir.

Interface ve Abstract Class Farkı:
- Interface’ler tamamen soyut yapılar sunarken, abstract class’lar hem soyut hem de somut metotlar içerebilir.
- Bir sınıf yalnızca bir abstract class’ı genişletebilirken, birden fazla interface’i uygulayabilir.

Nesne Oluşturma:
- Interface'ler doğrudan nesne oluşturmak için kullanılamaz. Ancak, interface'i uygulayan sınıflardan nesne oluşturulabilir.

Kullanım Amacı:
- Interface'ler, belirli bir davranışı farklı sınıflar arasında yaygınlaştırmak veya çoklu kalıtımı sağlamak amacıyla kullanılır.
  Interface kullanımı, kodun daha esnek, modüler ve sürdürülebilir olmasına yardımcı olur.

