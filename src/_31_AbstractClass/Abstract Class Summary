Abstract Class Nedir?:
Abstract Class'lar, soyutlama yapmak için kullanılan ve tamamlanmamış
veya uygulanması gereken metodları içeren sınıflardır.
Abstract Class'lar, diğer sınıflar tarafından genişletilir ve
bu sınıfların ortak özelliklerini ve davranışlarını tanımlamak için kullanılır.
Abstract Class'lar, tamamlanmamış ve tamamlanmış metodlar içerebilir.

Tamamlanmamış (Abstract) Metodlar:
Abstract Class'lar, tamamlanmamış metodları içerebilir.
Tamamlanmamış metodlar, sadece imza (signature) kısmını içerir
ve gövdesi (body) bulunmaz.
Alt sınıflar, bu tamamlanmamış metodları uygulamak zorundadır.
Bu sayede, Abstract Class'ın alt sınıfları,
kendilerine özgü davranışları uygulayabilirler.
Tamamlanmamış metodlar, alt sınıflar tarafından override edilmelidir.

Tamamlanmış (Concrete) Metodlar:
Abstract Class'lar, tamamlanmış metodları da içerebilir.
Tamamlanmış metodlar, gövdesi (body) olan ve doğrudan kullanılabilecek metodlardır.
Alt sınıflar, tamamlanmış metodları override etme seçeneğine sahiptir,
ancak zorunlu değildir.
Bu sayede, Abstract Class'ın alt sınıfları, ortak bir davranışı paylaşabilirler.

Nesne Oluşturma:
Abstract Class'lar doğrudan nesne olarak oluşturulamaz.
Bunun yerine, Abstract Class'ı genişleten alt sınıflardan nesne oluşturulabilir.
Abstract Class, bir şablon görevi görür ve
alt sınıfların ortak özelliklerini ve davranışlarını tanımlar.
Alt sınıflar, Abstract Class'ın tamamlanmamış metodlarını uygulamak zorundadır.

Kalıtım (Inheritance):
Abstract Class'lar, kalıtım (_29_Inheritance) kullanarak genişletilebilir.
Bir sınıf, yalnızca bir Abstract Class'ı genişletebilir,
ancak birden fazla arayüz (interface) uygulayabilir.
Abstract Class'lar, alt sınıfların ortak davranışlarını tanımlamak için kullanılırken,
arayüzler, bir sınıfın belirli bir davranışı uygulamasını sağlar.

Abstract Class'lar, Java'da kodun daha modüler,
yeniden kullanılabilir ve daha düzenli olmasını sağlar.
Ortak özelliklere sahip sınıfları bir araya getirerek
kod tekrarını azaltır ve daha sürdürülebilir bir yapı oluşturur.